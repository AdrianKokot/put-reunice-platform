name: 🤖 CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test-java:
    name: 🏋️ Maven / Build and run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
          cache: maven
      - name: Run maven
        run: |
          # Load .env.example variables to environment
          export $(grep -v '^#' .env.example | grep -v '^\W$')
          cd backend
          mvn verify --batch-mode --update-snapshots

  build-and-test-angular:
    name: 📦 NPM / Build, lint and run tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3
      - name: 📦 Install packages
        run: npm ci
      - name: 📄 Check formatting
        run: npx nx format:check
      - name: 📄 Lint
        run: npx nx affected -t lint --parallel=3
      - name: ⚡ Test
        run: npx nx affected -t test --parallel=3 --configuration=ci
      - name: ⚙️ Build
        run: npx nx affected -t build --parallel=3

  build-and-push-image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: 📦 Build and push container image to registry
    runs-on: ubuntu-latest
    needs: [build-and-test-java, build-and-test-angular]

    permissions:
      contents: 'read'
      packages: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase the repo name
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr

      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-development:
    name: 🚀 Deploy to DEV
    needs: [ build-and-push-image ]
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://reunice.kokotadrian.pl

    steps:
      - name: Lowercase the repo name
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr

      - name: Pull image
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.MIKRUS_SSH_SERVER }}
          username: ${{ secrets.MIKRUS_SSH_USER }}
          password: ${{ secrets.MIKRUS_SSH_PASSWORD }}
          port: ${{ secrets.MIKRUS_SSH_PORT }}
          script: |
            cd /reunice
            ./setup.sh
            docker pull ${{ steps.meta.outputs.tags }}
            docker run --network reunice --name app --env-file .env -p 80:8080 --memory="700m" -p 443:8080 -v /uploads:/uploads -v /db-resources:/db-resources -d ${{ steps.meta.outputs.tags }}
